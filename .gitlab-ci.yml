stages:
  - build
  - docker
  - release

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_IMAGE_NAME: "rknall/tvheadend-hwaccel"

build-packages:
  stage: build
  image: docker:latest
  services:
    - docker:dind

  before_script:
    - docker info
    - df -h

  script:
    - chmod +x build-tvheadend.sh
    - ./build-tvheadend.sh
    - echo "Built packages:"
    - ls -lh output/

  artifacts:
    name: "tvheadend-packages-$CI_COMMIT_SHORT_SHA"
    paths:
      - output/*.deb
    expire_in: 30 days
    reports:
      dotenv: build.env

  only:
    - main
    - merge_requests
    - tags

  tags:
    - docker

# Build and push Docker container image
build-docker:
  stage: docker
  image: docker:latest
  services:
    - docker:dind

  before_script:
    - docker info
    - df -h
    - |
      if [ -n "$CI_REGISTRY_USER" ]; then
        echo "Logging in to GitLab Container Registry"
        echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
      fi
    - |
      if [ -n "$DOCKERHUB_USERNAME" ]; then
        echo "Logging in to Docker Hub"
        echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      fi

  script:
    - docker buildx create --use --name multiarch-builder || true
    - docker buildx use multiarch-builder
    - docker buildx inspect --bootstrap
    - |
      # Determine tags based on branch/tag
      if [ "$CI_COMMIT_TAG" != "" ]; then
        TAGS="-t $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG -t $DOCKER_IMAGE_NAME:latest"
        REGISTRY_TAGS="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE:latest"
      elif [ "$CI_COMMIT_BRANCH" = "main" ]; then
        TAGS="-t $DOCKER_IMAGE_NAME:latest"
        REGISTRY_TAGS="-t $CI_REGISTRY_IMAGE:latest"
      else
        TAGS="-t $DOCKER_IMAGE_NAME:$CI_COMMIT_REF_SLUG"
        REGISTRY_TAGS="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
      fi
    - |
      # Build and push multi-architecture image
      docker buildx build \
        --platform linux/amd64,linux/arm64 \
        --file Dockerfile.docker \
        $TAGS \
        $REGISTRY_TAGS \
        --push \
        .

  only:
    - main
    - tags

  tags:
    - docker

# Create GitLab release when tagging
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest

  script:
    - echo "Creating release for $CI_COMMIT_TAG"

  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    assets:
      links:
        - name: 'tvheadend-core'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/output/tvheadend_*.deb?job=build-packages'
        - name: 'tvheadend-comskip'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/output/tvheadend-comskip_*.deb?job=build-packages'
        - name: 'tvheadend-picons'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/output/tvheadend-picons_*.deb?job=build-packages'
        - name: 'tvheadend-webgrab'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/output/tvheadend-webgrab_*.deb?job=build-packages'
        - name: 'tvheadend-full'
          url: '$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/output/tvheadend-full_*.deb?job=build-packages'

  only:
    - tags

  except:
    - branches

# Dockerfile.ffmpeg - Build FFmpeg 7.1.2 Debian packages
# Builds multi-architecture FFmpeg packages with hardware acceleration support

FROM debian:bookworm AS builder

ARG FFMPEG_VERSION=7.1.2
ARG DEBIAN_FRONTEND=noninteractive

ENV BUILD_DIR=/build \
    OUTPUT_DIR=/output

# Install basic build tools (mk-build-deps will install the rest)
RUN apt-get update && apt-get install -y \
    build-essential devscripts debhelper git wget equivs \
    nasm yasm \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p ${BUILD_DIR} ${OUTPUT_DIR}
WORKDIR ${BUILD_DIR}

# Install NVIDIA Video Codec SDK headers for NVENC/NVDEC support
RUN echo "Installing NVIDIA Video Codec SDK headers..." && \
    git clone --depth 1 https://git.videolan.org/git/ffmpeg/nv-codec-headers.git && \
    cd nv-codec-headers && \
    make install PREFIX=/usr && \
    cd .. && rm -rf nv-codec-headers && \
    echo "NVIDIA headers installed successfully"

# Download FFmpeg source, install dependencies, and build packages
RUN wget -q https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.xz && \
    tar xf ffmpeg-${FFMPEG_VERSION}.tar.xz && \
    cd ffmpeg-${FFMPEG_VERSION} && \
    # Get Debian packaging files from salsa.debian.org (debian/7:7.1.2-1)
    wget -q -O debian-packaging.tar.gz https://salsa.debian.org/multimedia-team/ffmpeg/-/archive/debian%2F7%257.1.2-1/ffmpeg-debian-7%257.1.2-1.tar.gz && \
    tar xzf debian-packaging.tar.gz && \
    mv ffmpeg-debian-7%7.1.2-1 ffmpeg-debian-pkg && \
    cp -r ffmpeg-debian-pkg/debian . && \
    rm -rf debian-packaging.tar.gz ffmpeg-debian-pkg && \
    # Patch debian/rules for architecture-specific hardware acceleration
    ARCH=$(dpkg --print-architecture) && \
    if [ "$ARCH" != "amd64" ] && [ "$ARCH" != "i386" ]; then \
        echo "Patching debian/rules for ARM architecture ($ARCH)..." && \
        # Disable Intel-only libvpl
        sed -i 's/--enable-libvpl/--disable-libvpl/g' debian/rules && \
        # Enable OMX for ARM (Raspberry Pi, ARM SBCs)
        sed -i 's/--disable-omx/--enable-omx --enable-omx-rpi/g' debian/rules; \
    fi && \
    # Enable full NVIDIA support (NVENC/NVDEC/CUVID) using installed headers
    echo "Enabling NVIDIA NVENC/NVDEC/CUVID support..." && \
    sed -i 's/--enable-nvenc/--enable-cuda-nvcc --enable-nvenc --enable-nvdec --enable-cuvid/g' debian/rules && \
    # Install build dependencies automatically (excluding unavailable packages)
    apt-get update && \
    mk-build-deps --install --remove --tool='apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes' debian/control || true && \
    # Build packages
    dpkg-buildpackage -d -b -uc -us -j$(nproc) && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy built packages to output
RUN cp ${BUILD_DIR}/*.deb ${OUTPUT_DIR}/ && \
    ls -lh ${OUTPUT_DIR}/

WORKDIR ${OUTPUT_DIR}

CMD ["sh", "-c", "cp /build/*.deb /output/ && ls -lh /output/"]

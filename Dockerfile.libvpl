# Dockerfile.libvpl - Build Intel VPL 2.15.0 Debian packages
# Builds Intel Video Processing Library for hardware acceleration

FROM debian:bookworm AS builder

ARG LIBVPL_VERSION=2.15.0
ARG DEBIAN_FRONTEND=noninteractive

ENV BUILD_DIR=/build \
    OUTPUT_DIR=/output

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential devscripts debhelper git wget cmake \
    pkg-config libdrm-dev libva-dev libx11-dev libwayland-dev \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p ${BUILD_DIR} ${OUTPUT_DIR}
WORKDIR ${BUILD_DIR}

# Download libvpl source
RUN wget -q https://github.com/intel/libvpl/archive/refs/tags/v${LIBVPL_VERSION}.tar.gz && \
    tar xzf v${LIBVPL_VERSION}.tar.gz && \
    cd libvpl-${LIBVPL_VERSION} && \
    # Get Debian packaging files from salsa.debian.org (commit 1c8cbe5 = debian/1:2.15.0-1)
    wget -q https://salsa.debian.org/debian/libvpl/-/archive/1c8cbe5/libvpl-1c8cbe5.tar.gz && \
    tar xzf libvpl-1c8cbe5.tar.gz && \
    cp -r libvpl-1c8cbe5/debian . && \
    rm -rf libvpl-1c8cbe5*

# Build packages
RUN cd libvpl-${LIBVPL_VERSION} && \
    # Build binary packages only (no source packages)
    dpkg-buildpackage -b -uc -us -j$(nproc)

# Copy built packages to output
RUN cp ${BUILD_DIR}/*.deb ${OUTPUT_DIR}/ && \
    ls -lh ${OUTPUT_DIR}/

WORKDIR ${OUTPUT_DIR}
CMD ["sh", "-c", "cp *.deb /output/ && ls -lh /output/"]
